;UNIVERSIDAD DEL VALLE DE GUATEMALA
;IE2023: PROGRAMACION DE MICROCONTROLADORES
;Proyecto1.asm
;AUTOR: Christian Quelex
;PROYECTO: Reloj Hora-Fecha-Alarma
;HARDWARE: ATMEGA328P


;ISR_TIMER0

.INCLUDE "M328PDEF.INC"
.EQU T1VALUE = 0xE17B
//.EQU STATE_ADDR = 0x0100	// Direccion guarda Data

.DEF ESTADO = R18
.DEF COUNTER_T0 = R19
.DEF COUNTER = R20
.DEF YEAR = R24
.DEF DAY = R25
.CSEG
.ORG 0X00
	JMP SETUP		;RESET VECTOR
.ORG 0X0008			// Interrupciones en los puertos C
	JMP ISR_PCINT1
.ORG 0X0020
	JMP ISR_TIMER0	;ISR: TIMER0 VECTOR




MAIN:

	LDI		R16, LOW(RAMEND)
	OUT		SPL, R16
	LDI		R17, HIGH(RAMEND)
	OUT		SPH, R17

	SEG: .DB 0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F// ,//0x77,0x7C,0x39,0x5E,0x79,0x71

	DAYS: .DB 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31

SETUP:

	LDI		R16, 0x00		// deshabilitar puertos usart
	STS		UCSR0B, R16
	
	LDI		R16, 0xFF		// Salidas puertos D
	OUT		DDRD, R16
	LDI		R16, 0x00
	OUT		PORTD, R16

	LDI		R16, 0xFF
	OUT		DDRB, R16
	//SBI		DDRB, PB3
	//SBI		DDRB, PB4		// Salidas para multiplexiar 
	//SBI		DDRB, PB5		// Luz a alarma - Buzzer

	LDI		R16, 0xF0		// Entradas Botones
	OUT		DDRC, R16
	LDI		R16, 0x0F
	OUT		PORTC, R16

	LDI		R21, 0				// configuracion de lista
	LDI		ZH, HIGH(SEG << 1)
	LDI		ZL, LOW(SEG << 1)
	ADD		ZL, R21
	LPM		R21, Z
	
	LDI		R16, (1 << PCINT8) | (1 << PCINT9) | (1 << PCINT10) | (1 << PCINT11)
	STS		PCMSK1, R16 // Puertos C como entras con interrupcion 

	LDI		R16, (1 << PCIE1)
	STS		PCICR, R16	// interrupciones ping change en el puerto C

	CALL	INIT_T0
	SEI					//Habilitar interrupciones globales

	CLR		ESTADO
	CLR		COUNTER_T0
	CLR		COUNTER

	// Modificadores para los digitos

	LDI		R16, 0
	STS		0x0121, R16			//Display1 Segundos
	LDI		R16, 5
	STS		0x0122, R16			//Display2 Decenas S
	LDI		R16, 9
	STS		0x0123, R16			//Display3 Min
	LDI		R16, 5
	STS		0x0124, R16			//Display4 Decena M
	LDI		R16, 3 // 3
	STS		0x0125, R16			//Display5 Horas
	LDI		R16, 2
	STS		0x0126, R16			//Display6 Decenas H
	CLR		R16
	STS		0x0127, R16			//Estado de display



	LDI		R16, 1
	STS		0x0151, R16			//Display1 DIA
	LDI		R16, 3
	STS		0x0152, R16			//Display2 DECENA DE DIA
	LDI		R16, 1
	STS		0x0153, R16			//Display3 MES
	LDI		R16, 0
	STS		0x0154, R16			//Display4 DECENA DE MES
	//LDI		R16, 3 // 3
	//STS		0x0155, R16			//Display5 Horas
	//LDI		R16, 2
	//STS		0x0156, R16			//Display6 Decenas H
	//CLR		R16
	//STS		0x0157, R16			//Estado de display


	// HORA
	STS		0x0131, R16			// DIGITO 1
	STS		0x0132, R16			// DIGITO 2
	STS		0x0133, R16			// DIGITO 3
	STS		0x0134, R16

	// FECHA

	STS		0x0161, R16			// DIGITO 1
	STS		0x0162, R16
	STS		0x0163, R16
	STS		Ox0164, R16

	// ALARMA
	STS		0x0141, R16
	STS		0x0142, R16
	STS		0x0143, R16
	STS		0x0144, R16

//	LDI		R20, 0				// Contador de Timer
//	LDI		R21, 0				// Contador de Display
//	LDI		R23, 0				// Contador de Decenas

LOOP:		//Listado de Estados 


	//LDS		R18, STATE_ADDR
	CPI		ESTADO, 0
	BREQ	ESTADO0PASO
	CPI		ESTADO, 1
	BREQ	ESTADO1PASO
	CPI		ESTADO, 2
	BREQ	ESTADO2PASO
	CPI		ESTADO, 3
	BREQ	ESTADO3PASO
	CPI		ESTADO, 4
	BREQ	ESTADO4PASO
	CPI		ESTADO, 5
	BREQ	ESTADO5PASO
	
	
.if 0
	
	CPI		ESTADO, 6
	BREQ	ESTADO6PASO
	CPI		ESTADO, 7
	BREQ	ESTADO7PASO
	CPI		ESTADO, 8
	BREQ	ESTADO8PASO
	CPI		ESTADO, 9
	BREQ	ESTADO9PASO
	CPI		ESTADO, 10
	BREQ	ESTADO10PASO
	CPI		ESTADO, 11
	BREQ	ESTADO11PASO


.endif
	//RJMP LOOP

	// Modificador de Decenas


ESTADO0PASO:		// MOSTRAR HORA
	JMP		ESTADO0

ESTADO1PASO:		// MOSTRAR FECHA
	JMP		ESTADO1 
ESTADO2PASO:
	CLR		R16
	STS		0x0132, R16		//ESTADO DISPLAY2
	STS		0x0133, R16		//ESTADO DISPLAY3
	STS		0x0134, R16		//ESTADO DISPLAY4
	JMP		ESTADO2
ESTADO3PASO:
	CLR		R16
	STS		0x0133, R16		//ESTADO DISPLAY3
	STS		0x0134, R16		//ESTADO DISPLAY4
	JMP		ESTADO3
ESTADO4PASO:
	CLR		R16
	STS		0x0134, R16		//ESTADO DISPLAY4
	JMP ESTADO4

ESTADO5PASO:
	JMP		ESTADO5
ESTADO6PASO:
	JMP		ESTADO6

.if 0

ESTADO6PASO:
	CLR		R16
	STS		0x0142, R16
	STS		0x0143, R16
	STS		0x0144, R16
	JMP		ESTADO6
ESTADO7PASO:
	CLR		R16
	STS		0x0143, R16
	STS		0x0144, R16
	JMP		ESTADO7
ESTADO8PASO:
	CLR		R16
	STS		0x0144, R16
	JMP		ESTADO8
ESTADO9PASO:
	JMP		ESTADO9
ESTADO10PASO:
	JMP		ESTADO10
ESTADO11PASO:
	JMP		ESTADO11

.endif

ESTADO0:		// Estado Base - Muestra la Hora

	CALL SECONDS_DISPLAYS
	// PRIMER DISPLAY1
	CALL CLEAN 
	LDS R22, 0x0123
	CALL DISPLAY
	LDI R16, 0x02
	OUT PORTB, R16		//ENCENCER CIERTO TRANSISTOR
	OUT PORTD, R22		//CARGA VALORES DE DISPLAY
	
	//SEGUNDO DISPLAY2
	CALL CLEAN 
	LDS R22, 0x0124
	CALL DISPLAY
	LDI R16, 0x01
	OUT PORTB, R16		//ENCENDER CIERTO TRANSISTOR
	OUT PORTD, R22		//CARGAR VALORES DE DISPLAY


	// TERCER DISPLAY HORAS1
	CALL CLEAN 
	LDS R22, 0x0125
	CALL DISPLAY
	LDI R16, 0x20
	OUT PORTB, R16
	OUT PORTD, R22

	// CUARTO DISPLAY HORAS2
	CALL CLEAN
	LDS R22, 0x0126
	CALL DISPLAY
	CBI PORTC, PC4
	LDI R16, 0x10
	OUT PORTB, R16
	OUT PORTD, R22


	CALL CLEAN
	LDI R16, 0x00
	SBI PORTC, PC4
	OUT PORTB, R16
	LDI R22, 0b01110110

	OUT PORTD, R22

	//CONTADOR DE SEGUNDOS

	CPI COUNTER_T0, 50
	BREQ D7
	CPI COUNTER_T0, 99
	BREQ D7
	CPI COUNTER_T0, 100
	BRNE LOOPS0
	CLR COUNTER_T0
	SBI PIND, PD7

	
	//EVALUAR LOS SEGUNDOS

	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP
	CLR R22
	JMP LOOP

D7:
	SBI PIND, PD7
	RJMP LOOP

ZEROSP:
	JMP ZEROS

LOOPS0:
	RJMP LOOP 


//------------------------------------------------

ESTADO1:		// Estado Base - Muestra la Hora

	CALL SECONDS_DISPLAYS
	// PRIMER DISPLAY1
	CALL CLEAN 
	LDS R22, 0x0151
	CALL DISPLAY
	LDI R16, 0x02
	OUT PORTB, R16		//ENCENCER CIERTO TRANSISTOR
	OUT PORTD, R22		//CARGA VALORES DE DISPLAY
	
	//SEGUNDO DISPLAY2
	CALL CLEAN 
	LDS R22, 0x0152
	CALL DISPLAY
	LDI R16, 0x01
	OUT PORTB, R16		//ENCENDER CIERTO TRANSISTOR
	OUT PORTD, R22		//CARGAR VALORES DE DISPLAY


	// TERCER DISPLAY HORAS1
	CALL CLEAN 
	LDS R22, 0x0153
	CALL DISPLAY
	LDI R16, 0x20
	OUT PORTB, R16
	OUT PORTD, R22

	// CUARTO DISPLAY HORAS2
	CALL CLEAN
	LDS R22, 0x0154
	CALL DISPLAY
	CBI PORTC, PC4
	LDI R16, 0x10
	OUT PORTB, R16
	OUT PORTD, R22


	CALL CLEAN
	LDI R16, 0x00
	SBI PORTC, PC4
	OUT PORTB, R16
	LDI R22, 0b01110110

	OUT PORTD, R22

	//CONTADOR DE SEGUNDOS

	CPI COUNTER_T0, 50
	BREQ D7
	CPI COUNTER_T0, 99
	BREQ D7
	CPI COUNTER_T0, 100
	BRNE LOOPS1
	CLR COUNTER_T0
	SBI PIND, PD7

	
	//EVALUAR LOS SEGUNDOS

	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP1
	CLR R22
	JMP LOOP

D7:
	SBI PIND, PD7
	RJMP LOOP

ZEROSP1:
	JMP ZEROS

LOOPS1:
	RJMP LOOP 


	//-----------------------------------------------

// ESTADO 1

ESTADO2:
	CALL MUX_DISPLAYS

	CPI COUNTER_T0, 100
	BRNE LOOPS2
	CLR COUNTER_T0

	//CBI PORTC, PC4

	// INCREMENTO CAMBIO DE REGISTROS ------------------------------------------------
	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP2
	CLR R22
	JMP LOOP

LOOPS2: 
	JMP LOOP
ZEROSP2:
	JMP ZEROS

ESTADO3:
	CALL MUX_DISPLAYS
	CPI COUNTER_T0, 100
	BRNE LOOPS3
	CLR COUNTER_T0

	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP3
	CLR R22
	JMP LOOP
LOOPS3:
	JMP LOOP
ZEROSP3: 
	JMP ZEROS


ESTADO4:
	CALL MUX_DISPLAYS
	CPI COUNTER_T0, 100
	BRNE LOOPS4
	CLR COUNTER_T0

	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP4
	CLR R22
	JMP LOOP
LOOPS4:
	JMP LOOP
ZEROSP4: 
	JMP ZEROS

ESTADO5:
	CALL MUX_DISPLAYS
	CPI COUNTER_T0, 100
	BRNE LOOPS5
	CLR COUNTER_T0

	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP5
	CLR R22
	JMP LOOP
LOOPS5:
	JMP LOOP
ZEROSP5: 
	JMP ZEROS


ESTADO6:
	LDI ESTADO, 0
	LDS R22, 0x0131
	LDS R16, 0x0132
	OR R22, R16
	LDS R16, 0x0133
	OR R22, R16
	LDS R16, 0x0134
	OR R22, R16
	CPI R22, 0
	BREQ LOOPS6

	LDS R22, 0x0133
	CPI R22, 4
	BRSH RESET_CH
	CALL ASSIGN_TIME

RESET_CH:
	LDS R22, 0x0134
	CPI R22, 2
	BREQ RST_T
	CALL ASSIGN_TIME

RST_T:
	CLR R22
	STS 0x0133, R22
	STS 0x0134, R22
	CALL ASSIGN_TIME


ASSIGN_TIME:
	LDS R22, 0x0131
	STS 0x0123, R22
	LDS R22, 0x0132
	STS 0x0124, R22
	LDS R22, 0x0133
	STS 0x0125, R22
	LDS R22, 0x0134
	STS 0x0126, R22
	CLR R22
	CALL MUX_DISPLAYS

	CPI COUNTER_T0, 100
	BRNE LOOPS6
	CLR COUNTER_T0

	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP6
	CLR R22
	JMP LOOP

LOOPS6:
	JMP LOOP

ZEROSP6:
	JMP ZEROS
.if 0



ESTADO6:
	CALL MUX_DISPLAYS_A

	CPI COUNTER_T0, 100
	BRNE LOOPS6
	CLR COUNTER_T0


	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP6
	CLR R22
	JMP LOOP

LOOPS6:
	JMP LOOP

ZEROSP6:
	JMP ZEROS


ESTADO7:
	CALL MUX_DISPLAYS_A

	CPI COUNTER_T0, 100
	BRNE LOOPS7


	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP7
	CLR R22
	JMP LOOP

LOOPS7:
	JMP LOOP

ZEROSP7:
	JMP ZEROS


ESTADO8:
	CALL MUX_DISPLAYS_A

	CPI COUNTER_T0, 100
	BRNE LOOPS8
	CLR COUNTER_T0


	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP8
	CLR R22
	JMP LOOP

LOOPS8:
	JMP LOOP

ZEROSP8:
	JMP ZEROS


ESTADO9:
	CALL MUX_DISPLAYS_A

	CPI COUNTER_T0, 100
	BRNE LOOPS9


	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP9
	CLR R22
	JMP LOOP

LOOPS9:
	JMP LOOP

ZEROSP9:
	JMP ZEROS


ESTADO10:

	LDI ESTADO, 11
	LDS R22, 0x0141
	LDS R16, 0x0142
	OR R22, R16
	LDS R16, 0x0143
	OR R22, R16
	LDS R16, 0x0144
	OR R22, R16
	CPI R22, 0
	BREQ LOOPS10

	LDS R22, 0x0143
	CPI R22, 4
	BRSH RESET_CH10
	CALL ASSIGN_TIME10

RESET_CH10:
	LDS R22, 0x0144
	CPI R22, 2
	BREQ RST_T10
	CALL ASSIGN_TIME10

RST_T10:
	CLR R22
	STS 0x0143, R22
	STS 0x0144, R22
	CALL ASSIGN_TIME10

ASSIGN_TIME10:

	CLR R22
	CALL MUX_DISPLAYS

	CPI COUNTER_T0, 100
	BRNE LOOPS10
	CLR COUNTER_T0

	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP10
	CLR R22
	JMP LOOP

LOOPS10:
	JMP LOOP

ZEROSP10:
	JMP ZEROS

ESTADO11:

	CALL SECONDS_DISPLAYS

	CALL CLEAN 
	LDS R22, 0x0123
	CALL DISPLAY
	LDI R16, 0x02
	OUT PORTB, R16
	OUT PORTD, R22


	CALL CLEAN 
	LDS R22, 0x0124
	CALL DISPLAY 
	LDI R16, 0x01
	OUT PORTB, R16
	OUT PORTD, R22

	CALL CLEAN 
	LDS R22, 0x0125
	CALL DISPLAY
	LDI R16, 0x20
	OUT PORTB, R16
	OUT PORTD, R22


	CALL CLEAN 
	LDS R22, 0x0126
	CALL DISPLAY 
	SBI	PORTC, PC4
	LDI R16, 0x10
	OUT PORTB, R16
	OUT PORTD, R22

	CALL CLEAN
	LDI R16, 0x00
	CBI PORTC, PC4
	OUT PORTB, R16
	LDI R22, 0x77
	OUT PORTD, R22


	CPI COUNTER_T0, 50
	BREQ D7_11
	CPI COUNTER_T0, 99
	BREQ D7_11
	CPI COUNTER_T0, 100
	BRNE LOOPS_11
	CLR COUNTER_T0
	SBI PIND, PD7

	CLR R22
	LDS R22, 0x0121
	INC R22
	STS 0x0121, R22
	CPI R22, 10
	BREQ ZEROSP_11

	CLR R22
	CLR R16
	LDS R22, 0x0141
	LDS R16, 0x0123
	CPSE R22, R16
	JMP LOOP

	CLR R22
	CLR R16
	LDS R22, 0x0142
	LDS R16, 0x0124
	CPSE R22, R16
	JMP LOOP

	CLR R22
	CLR R16
	LDS R22, 0x0143
	LDS R16, 0x0125
	CPSE R22, R16
	JMP LOOP

	CLR R22
	CLR R16
	LDS R22, 0x0144
	LDS R16, 0x0126
	CPSE R22, R16
	JMP LOOP
	CBI PORTC, PC4

	JMP LOOP

D7_11:
	SBI PIND, PD7
	RJMP LOOP

ZEROSP_11:
	JMP ZEROS

LOOPS_11:
	JMP LOOP



.endif 


ZEROS:							// Conador de decenas
	LDI		R22, 0
	STS 0x0121, R22
	
	LDS R22, 0x0122
	INC R22
	STS 0x0122, R22
	CPI R22, 6
	BREQ SIXS
	RJMP LOOP

SIXS:
	LDI R22, 0
	STS 0x0122, R22

	LDS R22, 0x0123
	INC R22
	STS 0x0123, R22
	CPI R22, 10
	BREQ ZEROM
	RJMP LOOP



ZEROM:							// Conador de decenas
	LDI		R22, 0
	STS 0x0123, R22
	
	LDS R22, 0x0124
	INC R22
	STS 0x0124, R22
	CPI R22, 6
	BREQ SIXM
	RJMP LOOP

SIXM:
	LDI R22, 0
	STS 0x0124, R22

	LDS R22, 0x0125
	INC R22
	STS 0x0125, R22
	CPI R22, 10
	BREQ ZEROSH
	CPI R22, 4
	BREQ ENDTIME
	RJMP LOOP

ZEROSH:
	LDI R22, 0
	STS 0x0125, R22

	LDS R22, 0x0126
	INC R22
	STS 0x0126, R22
	RJMP LOOP

ENDTIME:

	LDS R22, 0x0126
	SBRS R22, 1
	RJMP LOOP

	LDI R22, 0
	STS 0x0125, R22
	LDI R22, 0
	STS 0x0126, R22
	RJMP LOOP

MUX_DISPLAYS:
	CALL SECONDS_DISPLAYS

	CALL CLEAN 

	LDS R22, 0x0131
	CALL DISPLAY
	LDI R16, 0x02
	OUT PORTB, R16
	OUT PORTD, R22

	CALL CLEAN 

	LDS R22, 0x0132
	CALL DISPLAY
	LDI R16, 0x01
	OUT PORTB, R16
	OUT PORTD, R22

	CALL CLEAN 

	LDS R22, 0x0133
	CALL DISPLAY
	LDI R16, 0x20
	OUT PORTB, R16
	OUT PORTD, R22

	CALL CLEAN 

	LDS R22, 0x0134
	CALL DISPLAY
	LDI R16, 0x10
	OUT PORTB, R16
	OUT PORTD, R22

	CALL SHOW_STATE_SC

	SBI PIND, PD7
	RET

SECONDS_DISPLAYS:
	CLR R22

	CALL CLEAN 
	LDS R22, 0x0121
	CALL DISPLAY
	LDI R16, 0x08
	OUT PORTB, R16
	OUT PORTD, R22


	CALL CLEAN 
	LDS R22, 0x0122
	CALL DISPLAY
	LDI R16, 0x04
	OUT PORTB, R16
	OUT PORTD, R22
	RET


CLEAN:

	CLR R16
	OUT PORTB, R16
	OUT PORTD, R16
	CBI PORTC, PC4
	RET

DISPLAY:

	LDI ZH, HIGH(SEG << 1)
	LDI ZL, LOW(SEG << 1)
	ADD ZL, R22
	LPM R22, Z
	RET

SHOW_STATE_SC:
	CLR R16
	//CBI PORTB, PB5
	OUT PORTB, R16
	OUT PORTD, R16
	//SBI PORTB, PB5
	LDI R16, 0x00
	OUT PORTB, R16
	LDI R22, 0x6D
	OUT PORTD, R22
	RET

MUX_DISPLAYS_A:
 	CALL SECONDS_DISPLAYS

	CALL CLEAN 

	LDS R22, 0x0141
	CALL DISPLAY
	LDI R16, 0x20
	OUT PORTB, R16
	OUT PORTD, R22

	CALL CLEAN 

	LDS R22, 0x0142
	CALL DISPLAY
	LDI R16, 0x10
	OUT PORTB, R16
	OUT PORTD, R22

	CALL CLEAN 

	LDS R22, 0x0143
	CALL DISPLAY
	LDI R16, 0x01
	OUT PORTB, R16
	OUT PORTD, R22

	CALL CLEAN 

	LDS R22, 0x0144
	CALL DISPLAY
	LDI R16, 0x02
	OUT PORTB, R16
	OUT PORTD, R22

	// ESTADOS DE LOS DISPLAYS
	CLR R16
	//CBI PORTB, PB5
	OUT PORTB, R16
	OUT PORTD, R16
	//SBI PORTB, PB5
	LDI R16, 0x00
	OUT PORTB, R16
	LDI R22, 0x77
	OUT PORTD, R22
	CLR R22
	SBI PIND, PD7
	RET

// INTERRUPCIONES

// PCINT - INTERRUPCIONES PARA PUERTOS C

ISR_PCINT1:
	PUSH R16
	IN R16, SREG
	PUSH R16


	CPI ESTADO, 0
	BREQ ESTADO0_ISR_P
	CPI ESTADO, 1
	BREQ ESTADO1_ISR_P
	CPI ESTADO, 2
	BREQ ESTADO2_ISR_P
	CPI ESTADO, 3
	BREQ ESTADO3_ISR_P
	CPI ESTADO, 4
	BREQ ESTADO4_ISR_P
	CPI ESTADO, 5
	BREQ ESTADO5_ISR_P

.if 0
	//CPI ESTADO, 6				// AHORA AQUI ESTA ESTADO5
	//BREQ ESTADO6_ISR_P
	CPI ESTADO, 7
	BREQ ESTADO7_ISR_P
	CPI ESTADO, 8
	BREQ ESTADO8_ISR_P
	CPI ESTADO, 9
	BREQ ESTADO9_ISR_P
	//CPI ESTADO, 10
//	BREQ ESTADO10_ISR_P
	CPI ESTADO, 11
	BREQ ESTADO11_ISR_P

.endif
ESTADO0_ISR_P:
	RJMP ESTADO0_ISR
ESTADO1_ISR_P:
	RJMP ESTADO1_ISR
ESTADO2_ISR_P:
	RJMP ESTADO2_ISR
ESTADO3_ISR_P:
	RJMP ESTADO3_ISR
ESTADO4_ISR_P:
	RJMP ESTADO4_ISR
ESTADO5_ISR_P:
	RJMP ESTADO5-ISR

.if 0
ESTADO6_ISR_P:
	RJMP ESTADO6_ISR
ESTADO7_ISR_P:
	RJMP ESTADO7_ISR
ESTADO8_ISR_P:
	RJMP ESTADO8_ISR
ESTADO9_ISR_P:
	RJMP ESTADO9_ISR
ESTADO11_ISR_P:
	RJMP ESTADO11_ISR

.endif 
// ESTADOS DE INTERRUPCIONES 

ESTADO0_ISR:

	IN R16, PINC
	SBRS R16, 1
	NOP
	SBRS R16, 2
	NOP
	SBRS R16, 0
	CLR COUNTER
	SBRS R16, 0
	LDI ESTADO, 1
	SBRS R16, 3
	NOP

	RJMP ISR_POP


ESTADO1_ISR:

	IN R16, PINC
	SBRS R16, 1
	NOP
	SBRS R16, 2
	NOP
	SBRS R16, 0
	CLR COUNTER
	SBRS R16, 0
	LDI ESTADO, 2
	SBRS R16, 3
	LDI ESTADO, 0

	RJMP ISR_POP



ESTADO2_ISR:

	STS 0x0131, COUNTER
	CPI COUNTER, 0
	BREQ INF_LIM2

	IN R16, PINC 
	SBRS R16, 2
	DEC COUNTER
	SBRS R16, 1
	INC COUNTER

	CPI COUNTER, 10
	BREQ SUP_LIM2
	JMP END_ISR2

SUP_LIM2:
	LDI COUNTER, 0
	JMP END_ISR2
INF_LIM2:
	IN R16, PINC
	SBRS R16, 2
	LDI COUNTER, 9
	SBRS R16, 0
	INC COUNTER 
	RJMP END_ISR2

END_ISR2:
	SBRS R16, 0
	CLR COUNTER
	SBRS R16, 0
	LDI ESTADO, 3
	SBRS R16, 3
	CLR COUNTER
	SBRS R16, 3
	LDI ESTADO, 1
	RJMP ISR_POP


ESTADO3_ISR:

	STS 0x0132, COUNTER
	IN R16, PINC
	CPI COUNTER, 0
	BREQ INF_LIM3

	IN R16, PINC 
	SBRS R16, 2
	DEC COUNTER
	SBRS R16, 1
	INC COUNTER
	
	CPI COUNTER, 6
	BREQ SUP_LIM3
	JMP END_ISR3

SUP_LIM3:
	LDI COUNTER, 0
	JMP END_ISR3
INF_LIM3:
	IN R16, PINC
	SBRS R16, 2
	LDI COUNTER, 5
	SBRS R16, 0
	INC COUNTER 
	RJMP END_ISR3

END_ISR3:
	SBRS R16, 0
	CLR COUNTER
	SBRS R16, 0
	LDI ESTADO, 4
	SBRS R16, 3
	CLR COUNTER
	SBRS R16, 3
	LDI ESTADO, 2
	RJMP ISR_POP

//---------------------------------------------------------

ESTADO4_ISR:

	STS 0x0133, COUNTER
	CPI COUNTER, 0
	BREQ INF_LIM4

	IN R16, PINC 
	SBRS R16, 2
	DEC COUNTER
	SBRS R16, 1
	INC COUNTER
	CPI COUNTER, 10
	BREQ SUP_LIM4
	JMP END_ISR4

SUP_LIM4:
	LDI COUNTER, 0
	JMP END_ISR4
INF_LIM4:
	IN R16, PINC
	SBRS R16, 1
	LDI COUNTER, 9
	SBRS R16, 0
	INC COUNTER 
	RJMP END_ISR4

END_ISR4:
	SBRS R16, 0
	CLR COUNTER
	SBRS R16, 0
	LDI ESTADO, 5
	SBRS R16, 3
	CLR COUNTER
	SBRS R16, 3
	LDI ESTADO, 3
	RJMP ISR_POP


//-----------------------------------------------------------

ESTADO5_ISR:

	STS 0x0134, COUNTER
	//IN R16, PINC
	CPI COUNTER, 0
	BREQ INF_LIM5

	IN R16, PINC 
	SBRS R16, 2
	DEC COUNTER
	SBRS R16, 1
	INC COUNTER
	
	CPI COUNTER, 10
	BREQ SUP_LIM5
	JMP END_ISR5

SUP_LIM5:
	LDI COUNTER, 0
	JMP END_ISR5
INF_LIM5:
	IN R16, PINC
	SBRS R16, 1
	LDI COUNTER, 9
	SBRS R16, 0
	INC COUNTER 
	RJMP END_ISR5

END_ISR5:
	SBRS R16, 0
	CLR COUNTER
	SBRS R16, 0
	LDI ESTADO, 6
	SBRS R16, 3
	CLR COUNTER
	SBRS R16, 3
	LDI ESTADO, 4
	RJMP ISR_POP

	// AHORA EL 6 NO EXISTE
//--------------------------------------------------
.if 0
// ESTE DEBERIA DE SER EL 7
ESTADO6_ISR:

	STS 0x0141, COUNTER
	CPI COUNTER, 0
	BREQ INF_LIM6

	IN R16, PINC 
	SBRS R16, 2
	DEC COUNTER
	SBRS R16, 1
	INC COUNTER

	CPI COUNTER, 10
	BREQ SUP_LIM6
	JMP END_ISR6

SUP_LIM6:
	LDI COUNTER, 0
	JMP END_ISR6
INF_LIM6:
	IN R16, PINC
	SBRS R16, 1
	LDI COUNTER, 9
	SBRS R16, 0
	INC COUNTER 
	RJMP END_ISR6

END_ISR6:
	SBRS R16, 0
	CLR COUNTER
	SBRS R16, 0
	LDI ESTADO, 7
	SBRS R16, 3
	CLR COUNTER
	SBRS R16, 3
	LDI ESTADO, 4
	RJMP ISR_POP

//---------------------------------------------------------------

ESTADO7_ISR:

	STS 0x0142, COUNTER
	CPI COUNTER, 0
	BREQ INF_LIM7

	IN R16, PINC 
	SBRS R16, 2
	DEC COUNTER
	SBRS R16, 1
	INC COUNTER

	CPI COUNTER, 6
	BREQ SUP_LIM7
	JMP END_ISR7

SUP_LIM7:
	LDI COUNTER, 0
	JMP END_ISR7
INF_LIM7:
	IN R16, PINC
	SBRS R16, 1
	LDI COUNTER, 5
	SBRS R16, 0
	INC COUNTER 
	RJMP END_ISR7

END_ISR7:
	SBRS R16, 0
	CLR COUNTER
	SBRS R16, 0
	LDI ESTADO, 8
	SBRS R16, 3
	CLR COUNTER
	SBRS R16, 3
	LDI ESTADO, 6
	RJMP ISR_POP


//--------------------------------------------------

ESTADO8_ISR:

	STS 0x0143, COUNTER
	CPI COUNTER, 0
	BREQ INF_LIM8

	IN R16, PINC 
	SBRS R16, 2
	DEC COUNTER
	SBRS R16, 1
	INC COUNTER

	CPI COUNTER, 10
	BREQ SUP_LIM8
	JMP END_ISR8

SUP_LIM8:
	LDI COUNTER, 0
	JMP END_ISR8
INF_LIM8:
	IN R16, PINC
	SBRS R16, 1
	LDI COUNTER, 9
	SBRS R16, 0
	INC COUNTER 
	RJMP END_ISR8

END_ISR8:
	SBRS R16, 0
	CLR COUNTER
	SBRS R16, 0
	LDI ESTADO, 9
	SBRS R16, 3
	CLR COUNTER
	SBRS R16, 3
	LDI ESTADO, 7
	RJMP ISR_POP


//---------------------------------------------------------------

ESTADO9_ISR:

	STS 0x0144, COUNTER
	CPI COUNTER, 0
	BREQ INF_LIM9

	IN R16, PINC 
	SBRS R16, 2
	DEC COUNTER
	SBRS R16, 1
	INC COUNTER

	CPI COUNTER, 3
	BREQ SUP_LIM9
	JMP END_ISR9

SUP_LIM9:
	LDI COUNTER, 0
	JMP END_ISR9
INF_LIM9:
	IN R16, PINC
	SBRS R16, 1
	LDI COUNTER, 2
	SBRS R16, 0
	INC COUNTER 
	RJMP END_ISR9

END_ISR9:
	SBRS R16, 0
	CLR COUNTER
	SBRS R16, 0
	LDI ESTADO, 10
	SBRS R16, 3
	CLR COUNTER
	SBRS R16, 3
	LDI ESTADO, 8
	RJMP ISR_POP

//----------------------------------------------------

ESTADO11_ISR:
	IN R16, PINC
	SBRS R16, 1
	NOP
	SBRS R16, 2
	NOP
	SBRS R16, 0
	CLR COUNTER
	SBRS R16, 0
	LDI ESTADO, 0
	SBRS R16, 0
	CBI PORTC, PC4
	SBRS R16, 3
	LDI ESTADO, 9
	RJMP ISR_POP


.endif

ISR_POP:
	SBI PCIFR, PCIF1
	POP R16
	OUT SREG, R16
	POP R16
	RETI


	// prescaler para timer0 
INIT_T0:
	LDI		R16, (1 << CS02) | (1 << CS00)
	OUT		TCCR0B, R16		// prescaler de 1024

	LDI		R16, 99			// valor de overflow
	OUT		TCNT0, R16		// cargar el valor de overflow

	LDI		R16, (1 << TOIE0)
	STS		TIMSK0, R16			// habilitar interrupcion
	RET
	// Carga de Valores 
ISR_TIMER0:
	LDI		R16, 99			// valor de timer
	OUT		TCNT0, R16		// cargar valor de overflow
	SBI		TIFR0, TOV0		// Apagar bandera
	INC		COUNTER_T0				// Incrementar contador cada 10ms
	RETI

